# Systrace

Systrace可以通过获取应用进程以及系统其它进程的运行时间分析应用的性能，Systrace工具为Python脚本，需要系统安装Python2.7

## 1. 基本使用方法
命令：
```
python systrace.py [options] [category1] [category2] ... [categoryN]
```

-h, --help	Show the help message.
-o <FILE>	Write the HTML trace report to the specified file.
-t N, --time=N	Trace activity for N seconds. The default value is 5 seconds.
-b N, --buf-size=N	Use a trace buffer size of N kilobytes. This option lets you limit the total size of the data collected during a trace.
-k <KFUNCS>
--ktrace=<KFUNCS>	Trace the activity of specific kernel functions, specified in a comma-separated list.
-l, --list-categories	List the available tracing category tags. The available tags are:
gfx - Graphics
input - Input
view - View
webview - WebView
wm - Window Manager
am - Activity Manager
audio - Audio
video - Video
camera - Camera
hal - Hardware Modules
res - Resource Loading
dalvik - Dalvik VM
rs - RenderScript
sched - CPU Scheduling
freq - CPU Frequency
membus - Memory Bus Utilization
idle - CPU Idle
disk - Disk input and output
load - CPU Load
sync - Synchronization Manager
workq - Kernel Workqueues
Note: Some trace categories are not supported on all devices.

Tip: If you want to see the names of tasks in the trace output, you must include the sched category in your command parameters.

-a <APP_NAME>
--app=<APP_NAME>	Enable tracing for applications, specified as a comma-separated list of package names. The apps must contain tracing instrumentation calls from the Trace class. For more information, see Analyzing UI Performance with Systrace.
--from-file=<FROM_FILE>	Create the interactive Systrace report from a file, instead of running a live trace.
-e <DEVICE_SERIAL>
--serial=<DEVICE_SERIAL>	Conduct the trace on a specific connected device, identified by its device serial number.

## 2. 分析UI性能

例如：
```
	python systrace.py --time=10 -o mynewtrace.html sched gfx view wm
```
使用命令生成Trace

分析Trace
